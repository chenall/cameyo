<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Text" xml:space="preserve">
    <value>Editeur de package</value>
  </data>
  <data name="chkCleanAsk.Text" xml:space="preserve">
    <value>Demander une confirmation avant de supprimer</value>
  </data>
  <data name="chkCleanDoneDialog.Text" xml:space="preserve">
    <value>Afficher la boîte de dialogue lorsque le nettoyage est effectué.</value>
  </data>
  <data name="closeToolStripMenuItem.Text" xml:space="preserve">
    <value>Fermer</value>
  </data>
  <data name="columnFileName.Text" xml:space="preserve">
    <value>Fichier</value>
  </data>
  <data name="columnFileSize.Text" xml:space="preserve">
    <value>Taille</value>
  </data>
  <data name="columnFileType.Text" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="columnHeader3.Text" xml:space="preserve">
    <value>Fichier</value>
  </data>
  <data name="columnHeader4.Text" xml:space="preserve">
    <value>Valeur</value>
  </data>
  <data name="columnHeader5.Text" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="deleteToolStripMenuItem.Text" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="dropboxLabel.Text" xml:space="preserve">
    <value>Publier dans</value>
  </data>
  <data name="exitToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Quitter</value>
  </data>
  <data name="exportAsZeroInstallerXmlToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Exporter en tant que ZeroInstaller xml</value>
  </data>
  <data name="fileContextMenuDelete.Text" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="fileContextMenuProperties.Text" xml:space="preserve">
    <value>&amp;Properties</value>
  </data>
  <data name="fileToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Fichier</value>
  </data>
  <data name="fsAddBtn.Text" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="fsAddBtn.ToolTipText" xml:space="preserve">
    <value>Ajouter un fichier</value>
  </data>
  <data name="fsAddDirBtn.ToolTipText" xml:space="preserve">
    <value>Ajouter un dossier</value>
  </data>
  <data name="fsAddEmptyDirBtn.ToolTipText" xml:space="preserve">
    <value>Ajouter un dossier vide</value>
  </data>
  <data name="fsFolderInfoIsolationLbl.Text" xml:space="preserve">
    <value>Isolation:</value>
  </data>
  <data name="fsRemoveBtn.Text" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="fsRemoveBtn.ToolTipText" xml:space="preserve">
    <value>Supprimer le fichier ou le dossier</value>
  </data>
  <data name="fsSaveFileAsBtn.ToolTipText" xml:space="preserve">
    <value>Enregistrer le fichier sous</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Basiques</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Extras</value>
  </data>
  <data name="groupBox5.Text" xml:space="preserve">
    <value>Avancé</value>
  </data>
  <data name="groupBox6.Text" xml:space="preserve">
    <value>Expiration</value>
  </data>
  <data name="groupBox7.Text" xml:space="preserve">
    <value>Supprimer les traces à la fermeture de l'appi</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>ID de l'application</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>Version du fichier</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>Récemment édité</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Isolation:</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Mode d'isolation</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Données :</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Icone</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Eviter de virtualiser les processus enfants :</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Exemple: "iexplore.exe;myapp.exe"</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Studio</value>
  </data>
  <data name="lblAutoLaunch.Text" xml:space="preserve">
    <value>Démarrage :</value>
  </data>
  <data name="lnkAutoLaunch.Text" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="lnkChangeDataStorage.Text" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="lnkChangeIcon.Text" xml:space="preserve">
    <value>Modifier icône</value>
  </data>
  <data name="lnkCustomEvents.Text" xml:space="preserve">
    <value>Evènements personnalisés</value>
  </data>
  <data name="lnkPackageEdit.Text" xml:space="preserve">
    <value>Ouvrir une application existante</value>
  </data>
  <data name="newToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Nouveau package virtuel vide</value>
  </data>
  <data name="openToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Ouvrir le package</value>
  </data>
  <data name="propertyExpiration.Text" xml:space="preserve">
    <value>Date d'expiration</value>
  </data>
  <data name="propertyIsolationDataMode.Text" xml:space="preserve">
    <value>Données : laisser écrire dans répertoires Documents, Bureau et lecteurs réseaux</value>
  </data>
  <data name="propertyIsolationIsolated.Text" xml:space="preserve">
    <value>Isolé : l'application ne peut rien modifier ou écrire sur le système</value>
  </data>
  <data name="propertyIsolationMerge.Text" xml:space="preserve">
    <value>Accès total : l'application peut modifier tous les fichiers et base registre du système</value>
  </data>
  <data name="rdbCleanAll.Text" xml:space="preserve">
    <value>Nettoyer les données virtuelles en fin d'exécution (données et configuration ne seront pas retenus)</value>
  </data>
  <data name="rdbCleanNone.Text" xml:space="preserve">
    <value>Pas de nettoyage, laisser l'application prête pour se relancer (le plus rapide)</value>
  </data>
  <data name="rdbCleanRegOnly.Text" xml:space="preserve">
    <value>Nettoyer la base  registre (les valeurs registres seront sauvés dans un fichier)</value>
  </data>
  <data name="regEditBtn.ToolTipText" xml:space="preserve">
    <value>Editer le registre</value>
  </data>
  <data name="regExportBtn.ToolTipText" xml:space="preserve">
    <value>Exporter les clefs de registre sélectionnées dans un fichier.reg</value>
  </data>
  <data name="regImportBtn.Text" xml:space="preserve">
    <value>Importer</value>
  </data>
  <data name="regImportBtn.ToolTipText" xml:space="preserve">
    <value>Importer un fichier.reg</value>
  </data>
  <data name="regRemoveBtn.Text" xml:space="preserve">
    <value>Effacer</value>
  </data>
  <data name="regRemoveBtn.ToolTipText" xml:space="preserve">
    <value>Supprimer la clé</value>
  </data>
  <data name="saveasToolStripMenuItem.Text" xml:space="preserve">
    <value>Enregistrer &amp;sous</value>
  </data>
  <data name="saveToolStripMenuItem.Text" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="tabAdvanced.Text" xml:space="preserve">
    <value>Avancé</value>
  </data>
  <data name="tabFileSystem.Text" xml:space="preserve">
    <value>Fichiers</value>
  </data>
  <data name="tabGeneral.Text" xml:space="preserve">
    <value>Général</value>
  </data>
  <data name="tabRegistry.Text" xml:space="preserve">
    <value>Registry</value>
  </data>
  <data name="tabWelcome.Text" xml:space="preserve">
    <value>Bienvenue</value>
  </data>
  <data name="toolStripMenuItemExport.Text" xml:space="preserve">
    <value>&amp;Exporter vers un fichiers.reg</value>
  </data>
  <data name="englishMenuItem.Text" xml:space="preserve">
    <value>Anglais</value>
  </data>
  <data name="frenchMenuItem.Text" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="langToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Langue</value>
  </data>
  <data name="spanishMenuItem.Text" xml:space="preserve">
    <value>Español</value>
  </data>
  <data name="btnOk.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="propertyCmdRadio.Text" xml:space="preserve">
    <value>Commandes spécifiques</value>
  </data>
  <data name="btnModify.Text" xml:space="preserve">
    <value>&amp;Modifer</value>
  </data>
  <data name="btnRemove.Text" xml:space="preserve">
    <value>Retirer</value>
  </data>
  <data name="btnAdd.Text" xml:space="preserve">
    <value>&amp;Ajouter</value>
  </data>
  <data name="columnHeader1.Text" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="columnHeader2.Text" xml:space="preserve">
    <value>Commande</value>
  </data>
  <data name="propertyMenuRadio.Text" xml:space="preserve">
    <value>Afficher un menu de sélection :</value>
  </data>
  <data name="comboBox.Items" xml:space="preserve">
    <value>Au démarrage (non virtualisé)</value>
  </data>
  <data name="comboBox.Items1" xml:space="preserve">
    <value>Au démarrage (virtualisé)</value>
  </data>
  <data name="comboBox.Items2" xml:space="preserve">
    <value>A l'arrêt (virtualisé)</value>
  </data>
  <data name="comboBox.Items3" xml:space="preserve">
    <value>A l'arrêt (non virtualisé)</value>
  </data>
  <data name="boxWait.Text" xml:space="preserve">
    <value>Attendre que le programme se termine</value>
  </data>
  <data name="btnAddSave.Text" xml:space="preserve">
    <value>&amp;Ajouter</value>
  </data>
  <data name="enterCommand" xml:space="preserve">
    <value>Veuillez entrer une commande à exécuter</value>
  </data>
  <data name="propertyLocalStorageExeDir.Text" xml:space="preserve">
    <value>Sous le répertoire de l'exécutable</value>
  </data>
  <data name="propertyLocalStorageCustom.Text" xml:space="preserve">
    <value>Personnaliser l'emplacement : </value>
  </data>
  <data name="propertyLocalStorageDefault.Text" xml:space="preserve">
    <value>Par défaut: disque dur / Dropbox / USB (selon le chemin d'exécution)</value>
  </data>
  <data name="rdbIntegrateVirtual.Text" xml:space="preserve">
    <value>Intégration virtuelle: ajouter une couche virtuelle dans Explorer</value>
  </data>
  <data name="rdbIntegrateStandard.Text" xml:space="preserve">
    <value>Recréer raccourcis et associations</value>
  </data>
  <data name="rdbIntegrateNone.Text" xml:space="preserve">
    <value>Pas d'intégration</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>Intégration</value>
  </data>
  <data name="cbDontShowAgain.Text" xml:space="preserve">
    <value>Ne plus afficher</value>
  </data>
  <data name="cbDatFile.Text" xml:space="preserve">
    <value>Enregistrer le package comme .DAT, séparément du fichier exécutable (recommandé pour les applications de plus de 2 Go)</value>
  </data>
  <data name="chineseMenuItem.Text" xml:space="preserve">
    <value>Chinois</value>
  </data>
  <data name="exportXmlToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Exporter modèle XML</value>
  </data>
  <data name="propertyVirtModeDisk.Text" xml:space="preserve">
    <value>Mode disque : Fichiers des apps virtuels pré-extraits sur le disque en fonction des besoins; plus rapide pour les applications fréquemment utilisées</value>
  </data>
  <data name="propertyVirtModeRam.Text" xml:space="preserve">
    <value>RAM mode : Les applications virtuelles sont exécutées directement à partir de la mémoire vive</value>
  </data>
  <data name="cbVolatileRegistry.Text" xml:space="preserve">
    <value>Base de registres volatile</value>
  </data>
  <data name="groupConstraints.Text" xml:space="preserve">
    <value>Sécurité et expiration</value>
  </data>
  <data name="lblNotCommercial.Text" xml:space="preserve">
    <value>Autorisé pour un maximum de 49 machines</value>
  </data>
  <data name="lnkActiveDirectory.Text" xml:space="preserve">
    <value>Permission Active Directory</value>
  </data>
  <data name="lnkUpgrade.Text" xml:space="preserve">
    <value>Mise à niveau Société / développeur</value>
  </data>
  <data name="propertyDisplayLogo.Text" xml:space="preserve">
    <value>Afficher le logo de Cameyo</value>
  </data>
  <data name="propertyProt.Text" xml:space="preserve">
    <value>Mot de passe de protection contre l'édition :</value>
  </data>
  <data name="propertyScmDirect.Text" xml:space="preserve">
    <value>Permettre aux services système de s'enregistrer sur la machine cible</value>
  </data>
  <data name="propertyTtlDays.Text" xml:space="preserve">
    <value>Expire après (jours) :</value>
  </data>
  <data name="propertyTtlResistRemove.Text" xml:space="preserve">
    <value>Garder le compteur expiration même après la suppression de l'application</value>
  </data>
</root>