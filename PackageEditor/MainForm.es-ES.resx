<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Text" xml:space="preserve">
    <value>Editor de package</value>
  </data>
  <data name="chkCleanAsk.Text" xml:space="preserve">
    <value>Solicitar confirmación antes de eliminar</value>
  </data>
  <data name="chkCleanDoneDialog.Text" xml:space="preserve">
    <value>Muestra el cuadro de diálogo cuando la limpieza se lleva a cabo.</value>
  </data>
  <data name="closeToolStripMenuItem.Text" xml:space="preserve">
    <value>Cerrar</value>
  </data>
  <data name="columnFileName.Text" xml:space="preserve">
    <value>Arichivo</value>
  </data>
  <data name="columnFileSize.Text" xml:space="preserve">
    <value>Tamaño</value>
  </data>
  <data name="columnFileType.Text" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="columnHeader3.Text" xml:space="preserve">
    <value>Arichivo</value>
  </data>
  <data name="columnHeader4.Text" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="columnHeader5.Text" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="deleteToolStripMenuItem.Text" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="dropboxLabel.Text" xml:space="preserve">
    <value>Publicar en</value>
  </data>
  <data name="exitToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Dejar</value>
  </data>
  <data name="exportAsZeroInstallerXmlToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;exportar como ZeroInstaller xml</value>
  </data>
  <data name="fileContextMenuDelete.Text" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="fileContextMenuProperties.Text" xml:space="preserve">
    <value>&amp;Propiedades</value>
  </data>
  <data name="fileToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Archivo</value>
  </data>
  <data name="fsAddBtn.Text" xml:space="preserve">
    <value>Añadir</value>
  </data>
  <data name="fsAddBtn.ToolTipText" xml:space="preserve">
    <value>Añadir un archivo</value>
  </data>
  <data name="fsAddDirBtn.ToolTipText" xml:space="preserve">
    <value>Añadir una carpeta</value>
  </data>
  <data name="fsAddEmptyDirBtn.ToolTipText" xml:space="preserve">
    <value>Agregar una carpeta vacía</value>
  </data>
  <data name="fsFolderInfoIsolationLbl.Text" xml:space="preserve">
    <value>Aislamiento:</value>
  </data>
  <data name="fsRemoveBtn.Text" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="fsRemoveBtn.ToolTipText" xml:space="preserve">
    <value>Eliminar archivo o carpeta</value>
  </data>
  <data name="fsSaveFileAsBtn.ToolTipText" xml:space="preserve">
    <value>Guardar el archivo como</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>Básicas</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>Extras</value>
  </data>
  <data name="groupBox5.Text" xml:space="preserve">
    <value>Avanzado</value>
  </data>
  <data name="groupBox6.Text" xml:space="preserve">
    <value>Expiración</value>
  </data>
  <data name="groupBox7.Text" xml:space="preserve">
    <value>Eliminar rastros al cerrar de la aplicación</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>ID de la aplicación</value>
  </data>
  <data name="label10.Text" xml:space="preserve">
    <value>Versión del archivo</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>Recientemente etitado</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Descripción</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Aislamiento</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Aislamiento:</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>Datos:</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>Icono</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Evitar la virtualización de los procesos niños:</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Ejemplo: "iexplore.exe;myapp.exe"</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Studio</value>
  </data>
  <data name="lblAutoLaunch.Text" xml:space="preserve">
    <value>Inicio</value>
  </data>
  <data name="lnkAutoLaunch.Text" xml:space="preserve">
    <value>Modificar</value>
  </data>
  <data name="lnkChangeDataStorage.Text" xml:space="preserve">
    <value>Modificar</value>
  </data>
  <data name="lnkChangeIcon.Text" xml:space="preserve">
    <value>Modificar icono</value>
  </data>
  <data name="lnkCustomEvents.Text" xml:space="preserve">
    <value>Eventos personalizados</value>
  </data>
  <data name="lnkPackageEdit.Text" xml:space="preserve">
    <value>Abrir una aplicación existente</value>
  </data>
  <data name="newToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;nuevo package virtual vacío</value>
  </data>
  <data name="openToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Abrir el package</value>
  </data>
  <data name="propertyExpiration.Text" xml:space="preserve">
    <value>Fecha de expiración</value>
  </data>
  <data name="propertyIsolationDataMode.Text" xml:space="preserve">
    <value>Datos: Permitir escribir en los directorios Documentos,  Oficina, las unidades de red</value>
  </data>
  <data name="propertyIsolationIsolated.Text" xml:space="preserve">
    <value>Aislado: la aplicación no puede modificar nada, o escribir en el sistema</value>
  </data>
  <data name="propertyIsolationMerge.Text" xml:space="preserve">
    <value>Acceso completo: la aplicación puede modificar todos los archivos y el registro del sistema base</value>
  </data>
  <data name="rdbCleanAll.Text" xml:space="preserve">
    <value>Limpiar los datos virtuales al final de la ejecución (no se conservará datos y configuración)</value>
  </data>
  <data name="rdbCleanNone.Text" xml:space="preserve">
    <value>No limpiar, dejar la aplicación presta para reactivarse (más rápido)</value>
  </data>
  <data name="rdbCleanRegOnly.Text" xml:space="preserve">
    <value>Limpiar el registro (los valores registros serán salvados en un archivo)</value>
  </data>
  <data name="regEditBtn.ToolTipText" xml:space="preserve">
    <value>Editar el registro</value>
  </data>
  <data name="regExportBtn.ToolTipText" xml:space="preserve">
    <value>Exportar las claves seleccionadas del registro en un archivo.reg</value>
  </data>
  <data name="regImportBtn.Text" xml:space="preserve">
    <value>Importar</value>
  </data>
  <data name="regImportBtn.ToolTipText" xml:space="preserve">
    <value>Importar un archivo.reg</value>
  </data>
  <data name="regRemoveBtn.Text" xml:space="preserve">
    <value>Borrar</value>
  </data>
  <data name="regRemoveBtn.ToolTipText" xml:space="preserve">
    <value>Eliminar la clave</value>
  </data>
  <data name="saveasToolStripMenuItem.Text" xml:space="preserve">
    <value>Guardar &amp;como</value>
  </data>
  <data name="saveToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Guardar</value>
  </data>
  <data name="tabAdvanced.Text" xml:space="preserve">
    <value>Avanzado</value>
  </data>
  <data name="tabFileSystem.Text" xml:space="preserve">
    <value>Archivos</value>
  </data>
  <data name="tabGeneral.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="tabRegistry.Text" xml:space="preserve">
    <value>Registro</value>
  </data>
  <data name="tabWelcome.Text" xml:space="preserve">
    <value>Bienvenida</value>
  </data>
  <data name="toolStripMenuItemExport.Text" xml:space="preserve">
    <value>Exportar a un archivo.reg</value>
  </data>
  <data name="englishMenuItem.Text" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="frenchMenuItem.Text" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="langToolStripMenuItem.Text" xml:space="preserve">
    <value>&amp;Idiomas</value>
  </data>
  <data name="spanishMenuItem.Text" xml:space="preserve">
    <value>Español</value>
  </data>
  <data name="btnOk.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Anular</value>
  </data>
  <data name="propertyCmdRadio.Text" xml:space="preserve">
    <value>Mandos específicos</value>
  </data>
  <data name="btnModify.Text" xml:space="preserve">
    <value>&amp;Modificar</value>
  </data>
  <data name="btnRemove.Text" xml:space="preserve">
    <value>Retirar</value>
  </data>
  <data name="btnAdd.Text" xml:space="preserve">
    <value>&amp;Añadir</value>
  </data>
  <data name="columnHeader1.Text" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="columnHeader2.Text" xml:space="preserve">
    <value>Mando</value>
  </data>
  <data name="propertyMenuRadio.Text" xml:space="preserve">
    <value>Mostrar un menú de selección:</value>
  </data>
  <data name="comboBox.Items" xml:space="preserve">
    <value>Al inicio (no virtualizado)</value>
  </data>
  <data name="comboBox.Items1" xml:space="preserve">
    <value>Al inicio (virtualizado)</value>
  </data>
  <data name="comboBox.Items2" xml:space="preserve">
    <value>Al parada (virtualizado)</value>
  </data>
  <data name="comboBox.Items3" xml:space="preserve">
    <value>Al parada (no virtualizado)</value>
  </data>
  <data name="boxWait.Text" xml:space="preserve">
    <value>Esperar hasta que termine el programa</value>
  </data>
  <data name="btnAddSave.Text" xml:space="preserve">
    <value>&amp;Añadir</value>
  </data>
  <data name="enterCommand" xml:space="preserve">
    <value>Por favor, introduzca un comando para ejecutar</value>
  </data>
  <data name="propertyLocalStorageExeDir.Text" xml:space="preserve">
    <value>Bajo del directorio del archivo ejecutable</value>
  </data>
  <data name="propertyLocalStorageCustom.Text" xml:space="preserve">
    <value>Personalizar la ubicación</value>
  </data>
  <data name="propertyLocalStorageDefault.Text" xml:space="preserve">
    <value>Por defecto: disco duro / Dropbox / USB (dependiendo del camino de ejecución)</value>
  </data>
  <data name="cbDontShowAgain.Text" xml:space="preserve">
    <value>No volver a mostrar</value>
  </data>
</root>